{"dependencies":[{"name":"/Users/shawn-mac/02-个人/react/react-luo/.babelrc","includedInParent":true,"mtime":1520230118655},{"name":"/Users/shawn-mac/02-个人/react/react-luo/package.json","includedInParent":true,"mtime":1520230118660},{"name":"redux"},{"name":"react-router-redux"},{"name":"./app-reducer"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _redux = require(\"redux\");\n\nvar _reactRouterRedux = require(\"react-router-redux\");\n\nvar _appReducer = require(\"./app-reducer\");\n\nvar _appReducer2 = _interopRequireDefault(_appReducer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar RootReducer = (0, _redux.combineReducers)({\n  // 注意一定要加上routing: routerReducer 这是用于redux和react-router的连接\n  routing: _reactRouterRedux.routerReducer,\n  // 其他自定义的reducer\n  app: _appReducer2.default // 这里的命名，会成为store命名空间，取不同store区域中的值时，需指定不同的命名空间\n}); /**\n     * 根reducer\n     * 用于结合 App 中所有的 reducer.\n     * 由于Redux中只能有一个store和一个reducer ,\n     * 因此不要创建多个store！相反，使用 combineReducers 来把多个 reducer 合并成一个根 reducer。\n     **/\n\nexports.default = RootReducer;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"a_reducer/index.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"a_reducer/index.js","original":{"line":9,"column":0}},{"generated":{"line":11,"column":0},"source":"a_reducer/index.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":0},"source":"a_reducer/index.js","original":{"line":13,"column":0}},{"name":"RootReducer","generated":{"line":17,"column":4},"source":"a_reducer/index.js","original":{"line":13,"column":6}},{"generated":{"line":17,"column":18},"source":"a_reducer/index.js","original":{"line":13,"column":20}},{"generated":{"line":17,"column":46},"source":"a_reducer/index.js","original":{"line":13,"column":36}},{"generated":{"line":18,"column":0},"source":"a_reducer/index.js","original":{"line":14,"column":2}},{"name":"routing","generated":{"line":19,"column":0},"source":"a_reducer/index.js","original":{"line":15,"column":2}},{"generated":{"line":19,"column":42},"source":"a_reducer/index.js","original":{"line":13,"column":36}},{"generated":{"line":20,"column":0},"source":"a_reducer/index.js","original":{"line":16,"column":2}},{"name":"app","generated":{"line":21,"column":0},"source":"a_reducer/index.js","original":{"line":17,"column":2}},{"generated":{"line":21,"column":27},"source":"a_reducer/index.js","original":{"line":13,"column":36}},{"generated":{"line":21,"column":28},"source":"a_reducer/index.js","original":{"line":17,"column":18}},{"generated":{"line":22,"column":0},"source":"a_reducer/index.js","original":{"line":13,"column":36}},{"generated":{"line":22,"column":1},"source":"a_reducer/index.js","original":{"line":13,"column":20}},{"generated":{"line":22,"column":2},"source":"a_reducer/index.js","original":{"line":13,"column":0}},{"generated":{"line":22,"column":4},"source":"a_reducer/index.js","original":{"line":1,"column":0}},{"name":"RootReducer","generated":{"line":29,"column":18},"source":"a_reducer/index.js","original":{"line":20,"column":15}}],"sources":{"a_reducer/index.js":"/**\n * 根reducer\n * 用于结合 App 中所有的 reducer.\n * 由于Redux中只能有一个store和一个reducer ,\n * 因此不要创建多个store！相反，使用 combineReducers 来把多个 reducer 合并成一个根 reducer。\n **/\n\nimport { combineReducers } from \"redux\";\nimport { routerReducer } from \"react-router-redux\";\n\nimport appReducer from \"./app-reducer\";\n\nconst RootReducer = combineReducers({\n  // 注意一定要加上routing: routerReducer 这是用于redux和react-router的连接\n  routing: routerReducer,\n  // 其他自定义的reducer\n  app: appReducer // 这里的命名，会成为store命名空间，取不同store区域中的值时，需指定不同的命名空间\n});\n\nexport default RootReducer;\n"},"lineCount":null}},"hash":"6e536b42c1a8a78aba68140ae0adcb92","cacheData":{"env":{}}}